// Mixins.

m-nl()
	margin 0
	padding 0
	text-indent 0
	list-style none
	list-style-position outside

m-cf()
	&:before, &:after
		display table
		content ""

	&:after
		clear both

	.lt-ie8 &
		zoom 1


m-blocks-justify()
	text-align justify
	text-justify newspaper


// You can add your own mixins here:

file(file_name, file_ext, file_path)
	file_path + "/" + file_name + "." + file_ext

font-face( family, file-name, base-path="../fonts", weight=normal, style=normal )
	@font-face
		font-family family
		src url(file(file-name, "eot", base-path));
		src url(file(file-name, "eot?#iefix'", base-path)) format('embedded-opentype'),
			url(file(file-name, "woff", base-path)) format("woff"),
			url(file(file-name, "ttf", base-path)) format("truetype");

		font-weight weight
		font-style style

// overflow ellipsis
overflow(value)
	if (value == ellipsis)
		white-space nowrap
		text-overflow ellipsis
		overflow hidden
	else
		overflow value

// size 10px 20px
size( values... )
	if length( values ) == 1
		width values[ 0 ] || auto
		height values[ 0 ] || auto
	else
		width values[ 0 ] if values[ 0 ] != false
		height values[ 1 ] if values[ 1 ] != false

// Draw border triangle
triangle( direction, size, face-color, back-color = transparent )
	width 0
	height 0
	border size solid back-color
	if direction == up || direction == down-left || direction == down-right
		border-bottom-color face-color
		border-bottom-width (size + 2)
	if direction == down || direction == up-left || direction == up-right
		border-top-color face-color
		border-top-width (size + 2)
	if direction == left || direction == down-right || direction == up-right
		border-right-color face-color
		border-right-width (size + 2)
	if direction == right || direction == down-left || direction == up-left
		border-left-color face-color
		border-left-width (size + 2)

// Set input placeholder style
placeholder()
	if selector() == "&"
		error( "placeholder() must be called from a ruleset!" )
	&::-webkit-input-placeholder
		{block}
	&:-moz-placeholder
		{block}
	&::-moz-placeholder
		{block}
	&:-ms-input-placeholder
		{block}

// Set user select none
user-select-none()
	-webkit-touch-callout none
	-khtml-user-select none
	user-select none

// Convert pt to px
pt2px( pt )
	unit(pt/0.75, px)

// Convert photoshop tracking to em
ps-tracking( val )
	unit(val/1000, 'em')

// Set style of selection
selection( color )
	::selection
		background color
		{block}
	::-moz-selection
		background color
		{block}
	img::selection
		background transparent
		{block}
	img::-moz-selection
		background transparent
		{block}



// Font rendering OS X
font-smoothing(active = true)
	if active == true
		-webkit-font-smoothing antialiased
		-moz-osx-font-smoothing grayscale
	else
		-webkit-font-smoothing subpixel-antialiased
		-moz-osx-font-smoothing auto


// Count size in persents
ps(parentSize, childSize)
	amount = (childSize / parentSize) * 100
	amount = floor(amount, 2)
	unit(amount, "%")


font-feature()
	-moz-font-feature-settings: "liga=1, dlig=1"
	-ms-font-feature-settings: "liga", "dlig"
	-webkit-font-feature-settings: "liga", "dlig"
	-o-font-feature-settings: "liga", "dlig"
	font-feature-settings: "liga", "dlig"

hyphens()
	-webkit-hyphens: auto
	-moz-hyphens: auto
	hyphens: auto

image-responsive(display = block)
	display display
	max-width 100% // Part 1: Set a maximum relative to the parent
	height auto // Part 2: Scale the height according to the width, otherwise you get stretching

ul-reset()
	ul
		margin 0
		padding 0
		{block}

ol-reset()
	ol
		margin 0
		padding 0
		{block}

// _strip-units
// remove units of a number
_strip-units( val )
	unit( val, "" )

em( value, base = 16 )
	value = _strip-units( value )
	base = _strip-units( base )
	value / base * 1em

rem( value, base = 16px )
	u = unit(value)
	base = _strip-units( base )

	if (u is 'px')
		return unit(value / base, 'rem')
	else
		return unit(value, u)

m-padding()
	padding-left $mobile-padding
	padding-right $mobile-padding

border1()
	border-radius: 2px
	border-style: solid
	border-width: 1px
	border-color: $color2

shadow1()
	box-shadow 0 0 7px rgba(0, 0, 0, 0.13)

hover-opacity()
	&
		transition opacity 0.2s ease-in-out 0s
	&:hover
		opacity: .75

blue-link()
	&
	&:visited
		color: $color8
